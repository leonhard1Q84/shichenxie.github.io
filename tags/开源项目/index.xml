<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开源项目 on 谢士晨 | Shichen Xie</title>
    <link>/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</link>
    <description>Recent content in 开源项目 on 谢士晨 | Shichen Xie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用R语言开发评分卡模型案例</title>
      <link>/post/2018/01/05/scorecard/</link>
      <pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/05/scorecard/</guid>
      <description>为了提高信用评分卡的建模效率，我完成了第一个开源项目R包scorecard的开发(Github, CRAN)。该包提供了评分卡开发过程中的常用功能，例如：变量粗筛、最优分箱、模型评估、评分刻度转换等。
评分卡模型的开发流程通常包括以下五个主要步骤：数据准备、变量选择、逻辑回归、模型验证、评分卡刻度与实施。更加详细的信息请参考幻灯片-使用R语言开发评分卡模型。下面结合scorecard包完成一个简单的评分卡模型开发案例。
# 加载[data.table](http://r-datatable.com)与scorecard包。 library(data.table) # 一个超高性能的数据处理包。 library(scorecard) # 加载scorecard包中的德国信贷数据集。该数据集包含了1000个信贷样本 # 20个特征，其详细信息请参考&amp;lt;https://archive.ics.uci.edu/ml/ # datasets/Statlog+(German+Credit+Data)&amp;gt;。 data(&amp;quot;germancredit&amp;quot;) dim(germancredit) # 数据集的违约标签为creditability # 将其中违约样本的标签赋值为1，好样本的赋值为0。 dt = setDT(germancredit)[ ,creditability := ifelse(creditability==&amp;quot;bad&amp;quot;,1,0)] # 样本粗筛。 # 默认删除信息值小于0.02、缺失率大于95%或单类别比例大于95%的变量 # 可通过iv_limit, na_perc_limit, ele_perc_limit分别设定。 # var_rm与var_kp可以指定需要强制删除或强制保留的变量 # 如果return_rm_reason=TRUE，则返回删除变量的原因 dt_s = var_filter(dt, &amp;quot;creditability&amp;quot;) dim(dt_s) # 将数据集随机拆分为训练集与测试集。 # y为标签，如果不指定则随机拆分，反之则按照y的值分层拆分 # ratio为拆分后两个数据集样本数比例 # seed为随机种子，从而重现拆分样本 dt_list = split_df(dt_s, y=&amp;quot;creditability&amp;quot;, ratio=0.6, seed=30) train = dt_list$train; test = dt_list$test; # 由于数据集样本较少，后面的分箱过程采用全样本进行 # 最优分箱。通过决策树的形式寻找最优分箱点。 # 默认当信息值增益率小于0.1, 或分箱数大于5(缺失值除外)时停止分箱。 bins = woebin(dt_s, &amp;quot;creditability&amp;quot;, print_step = 0) # bins 数据类型 class(bins) # 打印第一个变量的分箱 bins[[1]] # 绘制第一个变量的分箱图 woebin_plot(bins[[1]]) # 手动调整分箱。通过breaks_list指定分箱点 # 其中类别变量通过 %,% 相连 breaks_adj = list( age.</description>
    </item>
    
  </channel>
</rss>