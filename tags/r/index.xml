<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on 谢士晨 | Shichen Xie</title>
    <link>/tags/r/</link>
    <description>Recent content in R on 谢士晨 | Shichen Xie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用R语言开发评分卡模型</title>
      <link>/post/2018/01/05/scorecard/</link>
      <pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/05/scorecard/</guid>
      <description>为了提高评分卡模型的开发效率，我为 R 语言社区贡献了一个开源项目 scorecard 包 (Github, CRAN)。该 R 包提供了评分卡开发过程中的常用功能，包括变量粗筛、分箱与woe转换、模型评估、评分刻度转换等。
评分卡模型的开发流程通常包括以下五个主要步骤：数据准备、WOE分箱、模型拟合、模型评估、评分卡刻度。下面结合 scorecard 包完成一个简单的评分卡模型开发案例。更加详细的评分卡模型开发介绍请参考幻灯片。
数据准备 首先加载 scorecard 包，并载入包内自带的德国信贷数据集。该数据集包含了1000个借款人的信贷数据，20个 X 特征与1个 Y 值。其详细信息参见 UCI 的德国信贷数据集网站。
library(scorecard) # load germancredit data data(germancredit) 载入数据集后，可先通过变量的 IV 值、缺失率以及单类别率对 X 特征进行初步筛选。var_filter 函数默认删除信息值小于0.02、缺失率大于95%或单类别比例大于95%的变量。var_filter 函数还能够人为设定需要删除或保留的变量，以及够返回变量删除的原因列表。
# filter variable via missing rate, iv, identical rate dt = var_filter(germancredit, y = &amp;#39;creditability&amp;#39;) ## [INFO] filtering variables ... 将经过初筛的数据集拆分为训练集与测试集。在 split_df 函数中如果指定了 y 变量，那么将基于 y 变量分层拆分，如果没有指定，则随机拆分数据集。ratio 为拆分后两个数据集的样本量占比。 seed 为随机种子，用于重现拆分的样本。
# breaking dt into train and test dt_list = split_df(dt, y=&amp;quot;creditability&amp;quot;, ratio = 0.</description>
    </item>
    
    <item>
      <title>stringr与regex函数对应关系</title>
      <link>/post/2017/07/25/stringr_regex/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/07/25/stringr_regex/</guid>
      <description>stringr是Hadley大神写的tidyverse1系列数据处理包中专门用于处理文本数据的包，其函数命名统一易于记忆。而R基础包中的文本处理函数(regex)的命名规则不是特别统一。下表给出了主要函数的映射关系，便于以后查看（stringr网站也给出了两者的映射关系）。
   stringr包中函数 功能说明 R Base中对应函数     使用正则表达式的函数     str_extract() 提取首个匹配模式的字符 regmatches()   str_extract_all() 提取所有匹配模式的字符 regmatches()   str_locate() 返回首个匹配模式的字符的位置 regexpr()   str_locate_all() 返回所有匹配模式的字符的位置 gregexpr()   str_replace() 替换首个匹配模式 sub()   str_replace_all() 替换所有匹配模式 gsub()   str_split() 按照模式分割字符串 strsplit()   str_split_fixed() 按照模式将字符串分割成指定个数 -   str_detect() 检测字符是否存在某些指定模式 grepl()   str_count() 返回指定模式出现的次数 -   其他重要函数     str_sub() 提取指定位置的字符 regmatches()   str_dup() 丢弃指定位置的字符 -   str_length() 返回字符的长度 nchar()   str_pad() 填补字符 -   str_trim() 丢弃填充，如去掉字符前后的空格 -   str_c() 连接字符 paste(),paste0()     r与python中三个数据处理系列包：data.</description>
    </item>
    
    <item>
      <title>博客搭建过程</title>
      <link>/post/2017/03/21/new-site/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/03/21/new-site/</guid>
      <description>在“我网故我在”的召唤下，我用R语言的blogdown包1和GitHubPages在一小时内搭建了本博客。搭建过程分为三个步骤：编辑网站文件、创建GitHub Pages仓库、域名绑定。
编辑网站文件 首先需要编写网站文件，也就是一堆HTML、JS、CSS文件。益辉的blogdown让静态网站文件编写简单到了一条R语句。在编辑网站文件之前，最好用RStudio新建一个空的项目文件夹，便于文件管理。在R中敲入如下代码
# 安装blogdown包 devtools::install_github(&#39;rstudio/blogdown&#39;) setwd(path) # path为新建的项目文件夹路径 # 或者直接用rstudio打开*.Rproj文件 # 创建网站文件 blogdown::new_site() # &amp;gt; sessionInfo() # R语言系统环境 # R version 3.3.2 (2016-10-31) # Platform: x86_64-apple-darwin13.4.0 (64-bit) # Running under: macOS Sierra 10.12.3  创建GitHub Pages仓库 登录自己的github主页（https://github.com/shichenxie，其中shichenxie为我的github账号），新建名为shichenxie.github.io的项目仓库(repository)。
然后将blogdown创建的public文件夹上传到github pages文件夹中。在terminal中敲入如下代码2
cd path # path为public文件地址 git init # 初始化git git remote add origin git@github.com:shichenxie/shichenxie.github.io.git git add -A # git中添加所有文件 git commit -m &#39;init site&#39; # commit git push -u origin master # push  绑定域名 首先在public文件夹添加名为CNAME的文件（无任何后缀名），然后用文本编辑器打开，写入网站域名(我的网站域名为shichen.</description>
    </item>
    
  </channel>
</rss>